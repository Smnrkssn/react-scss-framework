/*----------------------------------------
 * Loader
 *----------------------------------------*/
.loader {
    border-radius: 50%;
    animation: loader-spin 1s linear infinite;

    &.inverted {
        border-color: $primary;
        border-top-color: transparent;
    }

    @each $name, $color in $darkColors {
        &.#{$name} {
            background-color: initial;
            border-top-color: $color;

            &.light {
                border-top-color: darkToLight($color);
                background-color: initial;

                &.inverted {
                    border-color: darkToLight($color);
                    border-top-color: transparent;
                }
            }

            &.dark {
                border-top-color: darkToDarker($color);
                background-color: initial;

                &.inverted {
                    border-color: darkToDarker($color);
                    border-top-color: transparent;
                }
            }

            &.inverted {
                border-color: $color;
                border-top-color: transparent;
            }
        }
    }

    &-huge {
        @extend .loader;
        width: #{$loader-huge-size}px;
        height: #{$loader-huge-size}px;
        border: #{$loader-huge-size / 10}px solid $gray;
        border-top: #{$loader-huge-size / 10}px solid $primary;
    }

    &-large {
        @extend .loader;
        width: #{$loader-large-size}px;
        height: #{$loader-large-size}px;
        border: #{$loader-large-size / 10}px solid $gray;
        border-top: #{$loader-large-size / 10}px solid $primary;
    }

    &-medium {
        @extend .loader;
        width: #{$loader-medium-size}px;
        height: #{$loader-medium-size}px;
        border: #{$loader-medium-size / 10}px solid $gray;
        border-top: #{$loader-medium-size / 10}px solid $primary;
    }

    &-small {
        @extend .loader;
        width: #{$loader-small-size}px;
        height: #{$loader-small-size}px;
        border: #{$loader-small-size / 10}px solid $gray;
        border-top: #{$loader-small-size / 10}px solid $primary;
    }

    &-tiny {
        @extend .loader;
        width: #{$loader-tiny-size}px;
        height: #{$loader-tiny-size}px;
        border: #{$loader-tiny-size / 10}px solid $gray;
        border-top: #{$loader-tiny-size / 10}px solid $primary;
    }
}